问题1：
switch(num){
	case 1:
		console.log(1);
		continue;
	case 2:
		console.log(2);
		continue;
}
以上程序执行时是否正确？？错误，switch中没有continue
问题2：
	var num = 1;
	while(num < 10){
		switch(num){
			case 1:
				console.log(1);
				continue;//作用在while上面，与switch无关
			case 2:
				console.log(2);
				continue;//作用在while上面，与switch无关
		}
	}
	以上代码执行时有没有问题？？正确


=================================================
1、循环
	1、do...while()
		1、语法
			do{
				//循环体
			}while(条件);

			执行流程：
				1、先执行循环体
				2、再判断条件
					如果条件为真，则继续执行循环体
					如果条件为假，则跳出循环结构
		2、do...while 与 while 之间的比较
			1、do...while(至少1次)
				先执行循环体，再判断条件
				即便条件不满足，也要执行一次循环体
			2、while(至少0次)
				先判断条件，再执行循环体
				如果条件不满足，则不执行循环操作
		3、练习
			1、改版循环录入数据的操作(5分钟)
				1、从弹框中录入数据并输出在控制台上
				2、直到输入 exit 为止
			2、猜数字游戏
				1、随机生成一个1-100之间的数字
					Math.random() : 生成一个0-1之间的小数
					var r=parseInt(Math.random()*100)+1;
				2、让用户输入一个整数，与随机数比较
					如果输入的数，比随机数大，提示:猜大了
					如果输入的数，比随机数小，提示:猜小了
					否则：猜对了 (退出游戏)
					步骤2 允许循环操作
				3、输入 exit 也可以退出游戏
	2、for()
		1、while循环
			var i = 1; //表达式1:循环条件的声明
			while(i <= 100){//表达式2:循环条件的判断
				console.log(i);//循环操作
				i++;//表达式3:更新循环变量
			}
		2、语法
			for(表达式1;表达式2;表达式3){
				//循环操作
			}
			表达式1:循环条件的声明
			表达式2:循环条件的判断
			表达式3:更新循环变量

			for(var i = 1;i <= 100;i++){
				console.log(i);
			}

			执行流程：
				1、先执行表达式1
				2、判断表达式2的结果，boolean类型的
				3、如果条件为真，则执行循环体，否则退出
				4、执行完循环体后，再执行表达式3
				5、判断表达式2的结果，(同步骤2)

			while 与 for 的执行场合：
				1、while通常在不确定循环次数的条件下使用
				2、for通常在确定循环次数的条件下使用
		练习：
			1、使用for循环，实现 10!
				条件：
					从1开始，到10结束，递增
				操作：
					计算每个数字累乘的结果
			2、定义一个函数，接收一个参数(整数),打印乘法口诀表中的任意一行
				ex：参数为5
				1*5=5 2*5=10 3*5=15 4*5=20 5*5=25
			3、创建一个函数，计算以下数列的和
				1/1+1/3+1/5+1/7+...+1/999
				
			4、定义一个函数，接收一个参数(整数)，判断该参数是否为素数(质数)
				素数：只能被1 和 它本身整除的数
				提示：从2开始，到数字-1为止

			5、兔子问题：从前有1对兔子，从出生后的第3个月起，每个月都生1对兔子，小兔子长到第3个月后每个月又生一对兔子，假如兔子都不死，问：打印前10个月的兔子的数量
			1,1,2,3,5,8,13,21,34,55,... ...
			n1 n2       n1 n2
			1  1  2  3  5  8  13  21  34  55
			      n1 n2

			n1 = n1 + n2;
			n2 = n1 + n2;
		3、for三个表达式的特殊用法
			for(表达式1;表达式2;表达式3)
			1、省略表达式
				三个表达式可以被任意的省略，但 ; 不能省
				for(;;){}
				如果省略表达式的话，那么尽量在循环内或外将表达式的信息补充完整
			2、表达式1 和 表达式3 允许写多个表达式，多个表达式之间用 , 隔开
	3、循环的嵌套
		1、什么是循环的嵌套
			在一个循环的内部，又出现一个循环
			for(var i=1;i<=100;i++){ //外层循环
				for(var j=1;j<=100;j++){ //内存循环
					
				}
			}
			外层循环走一次，内层循环走一轮
			
			练习：
				1、在控制台上打印输出以下图形
					1、
						*
						**
						***
						****
						*****
					2、
						    *  第一行：4个空格 1个*
						   **  第二行：3个空格 2个*
						  ***  第三行：2个空格 3个*
						 ****  第四行：1个空格 4个*
						*****  第五行：0个空格 5个*
						每行空格数量：5-当前的行数
					3、
					     *      第一行：4个空格 1个*
					    ***     第二行：3个空格 3个*
					   *****    第三行：2个空格 5个*
					  *******   第四行：1个空格 7个*
					 *********  第五行：0个空格 9个*
					  *******
						 *****
						  ***
							 *
					4、打印九九乘法表到控制台上
2、数组
	1、什么是数组
		在一个变量中允许保存多个数据
		数组在计算机中是按照线性顺序来排列的 - 线性结构
	2、声明数组
		1、var 数组名 = [];
			var names = [];
		2、var 数组名 = [元素1,元素2,元素3,... ...];
			声明数组，直接初始化元素
			var names = ["张无忌","张翠山","张三丰"];
		3、var 数组名 = new Array();
			声明一个空数组
		4、var 数组名 = new Array(元素1,元素2,...);
			声明数组，直接初始化元素
			var names = new Array("杨幂","范冰冰","李文华");
		
		练习：
			1、创建一个数组，保存3名学员的姓名(names)
			2、创建一个数组，保存3名学员的性别(genders)
			3、创建一个数组，保存3名学员的年龄(ages)
			4、控制台中，分3次打印3个数组的内容
				console.log(数组名);
	3、数组的使用
		取值 和 赋值都是用 数组名[下标]
		1、为数组元素赋值
			数组名[下标]=值;
			ex:
				names[0] = "李师师";
				names[1] = "孙悟空";
		2、获取数组中的元素
			ex:
				console.log(names[0]);
		3、获取数组的长度
			数组长度：数组中元素的个数
			属性：length
			语法：数组名.length
			1、配合循环，遍历数组中的每一个元素
				for(var i=0;i<names.length;i++){
					i : 表示每个元素的下标
					names[i] : 每个元素
				}
			2、length可以表示数组中即将要插入的元素的下标
				ex：
					向 names 数组后增加一个元素，值为 "西门庆"

					names[names.length] = "西门庆";


作业：
	1、循环的从弹框中录入员工的姓名，将录入好的姓名保存在数组中(names)，直到输入 exit 为止，在控制台中打印数组中所有的元素(可尝试倒序打印)
	2、定义一个函数，声明一个整数数组，找出该数组中的最大值
	3、定义一个函数，声明一个数组，数据随意。从弹框中录入一个信息，查找该信息在数组中的下标是多少
		已声明数组：["孙悟空","猪悟能","李文华"]

		输入：李文华
		输出：下标为2









